import { ResetCSS, Box } from '@pancakeswap/uikit'
import Script from 'next/script'
import BigNumber from 'bignumber.js'
// import EasterEgg from 'components/EasterEgg'
import GlobalCheckClaimStatus from 'components/GlobalCheckClaimStatus'
// import SubgraphHealthIndicator from 'components/SubgraphHealthIndicator'
import { ToastListener } from 'contexts/ToastsContext'
import useEagerConnect from 'hooks/useEagerConnect'
import { useInactiveListener } from 'hooks/useInactiveListener'
import useSentryUser from 'hooks/useSentryUser'
import useUserAgent from 'hooks/useUserAgent'
import type { AppProps } from 'next/app'
import Head from 'next/head'
import React, { Fragment, useCallback, useEffect, useRef, useState } from 'react'
import { PersistGate } from 'redux-persist/integration/react'
import { useStore, persistor } from 'state'
import { usePollBlockNumber } from 'state/block/hooks'
import { usePollCoreFarmData } from 'state/farms/hooks'
import { NextPage } from 'next'
import { useFetchProfile } from 'state/profile/hooks'
import { Blocklist, Updaters } from '..'
import ErrorBoundary from '../components/ErrorBoundary'
import Menu from '../components/Menu'
import BlockCountry from '../components/BlockCountry'
import Providers from '../Providers'
import GlobalStyle from '../style/Global'

// This config is required for number formatting
BigNumber.config({
  EXPONENTIAL_AT: 1000,
  DECIMAL_PLACES: 80,
})

function GlobalHooks() {
  usePollBlockNumber()
  useEagerConnect()
  useFetchProfile()
  usePollCoreFarmData()
  useUserAgent()
  useInactiveListener()
  useSentryUser()
  return null
}

function MyApp(props: AppProps) {
  const { pageProps } = props
  const store = useStore(pageProps.initialReduxState)

  return (
    <>
      <Head>
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1, maximum-scale=5, minimum-scale=1, viewport-fit=cover"
        />
        <meta
          name="description"
          content="Cheaper and faster than Uniswap? Discover PancakeSwap, the leading DEX on Binance Smart Chain (BSC) with the best farms in DeFi and a lottery for CAKE."
        />
        <meta name="theme-color" content="#1FC7D4" />
        <meta name="twitter:image" content="https://pancakeswap.finance/images/hero.png" />
        <meta
          name="twitter:description"
          content="The most popular AMM on BSC! Earn CAKE through yield farming or win it in the Lottery, then stake it in Syrup Pools to earn more tokens! Initial Farm Offerings (new token launch model pioneered by PancakeSwap), NFTs, and more, on a platform you can trust."
        />
        <meta name="twitter:card" content="summary_large_image" />
        <meta
          name="twitter:title"
          content="ðŸ¥ž PancakeSwap - A next evolution DeFi exchange on Binance Smart Chain (BSC)"
        />
        <title>Galaxy Goggle DAO</title>
      </Head>
      <Providers store={store}>
        <Blocklist>
          <GlobalHooks />
          <Updaters />
          <ResetCSS />
          <GlobalStyle />
          <GlobalCheckClaimStatus excludeLocations={[]} />
          <PersistGate loading={null} persistor={persistor}>
            <BlockCountry />
            <App {...props} />
          </PersistGate>
        </Blocklist>
      </Providers>
      <Script
        strategy="afterInteractive"
        id="google-tag"
        dangerouslySetInnerHTML={{
          __html: `
            (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
            new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
            j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
            'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
            })(window,document,'script','dataLayer', '${process.env.NEXT_PUBLIC_GTAG}');
          `,
        }}
      />
    </>
  )
}

type NextPageWithLayout = NextPage & {
  Layout?: React.FC
}

type AppPropsWithLayout = AppProps & {
  Component: NextPageWithLayout
}

const ProductionErrorBoundary = process.env.NODE_ENV === 'production' ? ErrorBoundary : Fragment

const letterElement = '<path d="M1303 1643 c26 -2 68 -2 95 0 26 2 4 3 -48 3 -52 0 -74 -1 -47 -3z" /><path d="M247.013 153.096c-2.979 0-5.085-.617-6.318-1.849-1.13-1.233-1.695-3.185-1.695-5.856v-89.22c0-2.672.616-4.624 1.849-5.856 1.233-1.336 3.287-2.004 6.164-2.004h37.753c14.382 0 24.963 3.031 31.744 9.092 6.78 6.061 10.17 15.101 10.17 27.12 0 11.917-3.39 20.906-10.17 26.967-6.678 5.959-17.259 8.938-31.744 8.938h-14.639v24.963c0 2.671-.616 4.623-1.849 5.856-1.233 1.232-3.339 1.849-6.318 1.849h-14.947zm35.288-55.012c4.212 0 7.448-1.13 9.708-3.39 2.362-2.26 3.544-5.65 3.544-10.17 0-4.623-1.182-8.065-3.544-10.325-2.26-2.26-5.496-3.39-9.708-3.39h-12.174v27.275h12.174zM363.071 155.407c-9.656 0-17.412-3.082-23.268-9.245-5.753-6.267-8.629-15.05-8.629-26.351 0-8.629 1.952-16.18 5.855-22.652 4.007-6.472 9.606-11.454 16.797-14.947 7.294-3.595 15.666-5.393 25.117-5.393 7.808 0 14.691.873 20.649 2.62 6.061 1.643 11.608 4.057 16.642 7.242v61.638c0 1.952-.359 3.236-1.079 3.852-.719.617-2.157.925-4.314.925h-15.718c-1.13 0-2.003-.154-2.619-.463-.617-.41-1.13-1.027-1.541-1.849l-2.004-4.622c-2.979 3.184-6.574 5.496-10.786 6.934-4.109 1.541-9.143 2.311-15.102 2.311zm11.558-20.957c4.006 0 7.139-.976 9.399-2.927 2.26-1.952 3.39-4.726 3.39-8.322V99.163c-1.951-.925-4.417-1.387-7.396-1.387-5.445 0-9.811 1.9-13.098 5.701-3.185 3.801-4.777 9.143-4.777 16.026 0 9.965 4.16 14.947 12.482 14.947zM437.679 153.096c-2.98 0-5.086-.617-6.318-1.849-1.233-1.233-1.849-3.185-1.849-5.856V83.907c0-1.849.308-3.082.924-3.698.719-.72 2.157-1.079 4.315-1.079h15.872c1.232 0 2.157.206 2.773.617.719.308 1.13.924 1.233 1.849l.77 4.623c2.877-2.877 6.627-5.137 11.249-6.78 4.726-1.747 9.965-2.62 15.718-2.62 8.321 0 15.05 2.363 20.186 7.088 5.137 4.623 7.705 11.506 7.705 20.649v40.835c0 2.671-.616 4.623-1.849 5.856-1.13 1.232-3.185 1.849-6.164 1.849h-14.947c-2.979 0-5.136-.617-6.472-1.849-1.233-1.233-1.849-3.185-1.849-5.856v-38.832c0-3.082-.668-5.29-2.003-6.626-1.336-1.335-3.442-2.003-6.318-2.003-3.082 0-5.548.822-7.397 2.465-1.746 1.644-2.619 3.904-2.619 6.781v38.215c0 2.671-.617 4.623-1.849 5.856-1.13 1.232-3.185 1.849-6.164 1.849h-14.947zM564.725 155.407c-14.382 0-25.477-3.339-33.285-10.016-7.807-6.677-11.711-16.385-11.711-29.124 0-7.807 1.798-14.69 5.393-20.648 3.596-5.959 8.784-10.582 15.564-13.869 6.883-3.287 14.999-4.931 24.347-4.931 7.088 0 13.047.668 17.875 2.003 4.931 1.336 9.297 3.39 13.098 6.164 1.13.72 1.695 1.644 1.695 2.774 0 .822-.411 1.9-1.233 3.236l-6.318 10.94c-.719 1.439-1.592 2.158-2.619 2.158-.617 0-1.593-.411-2.928-1.233-2.774-1.746-5.393-3.03-7.859-3.852-2.363-.822-5.342-1.233-8.937-1.233-5.137 0-9.297 1.644-12.482 4.931-3.082 3.287-4.623 7.807-4.623 13.56 0 5.856 1.592 10.376 4.777 13.56 3.185 3.082 7.551 4.623 13.098 4.623 3.287 0 6.267-.462 8.938-1.387 2.671-.924 5.393-2.208 8.167-3.852 1.438-.822 2.465-1.233 3.082-1.233.924 0 1.746.719 2.465 2.158l6.934 11.865c.514 1.027.771 1.849.771 2.465 0 .925-.617 1.798-1.849 2.62-4.315 2.774-9.041 4.828-14.177 6.164-5.034 1.438-11.095 2.157-18.183 2.157zM638.004 155.407c-9.657 0-17.413-3.082-23.268-9.245-5.753-6.267-8.63-15.05-8.63-26.351 0-8.629 1.952-16.18 5.856-22.652 4.006-6.472 9.605-11.454 16.796-14.947 7.294-3.595 15.667-5.393 25.118-5.393 7.807 0 14.69.873 20.648 2.62 6.061 1.643 11.609 4.057 16.643 7.242v61.638c0 1.952-.36 3.236-1.079 3.852-.719.617-2.157.925-4.315.925h-15.717c-1.13 0-2.004-.154-2.62-.463-.616-.41-1.13-1.027-1.541-1.849l-2.003-4.622c-2.979 3.184-6.575 5.496-10.787 6.934-4.109 1.541-9.143 2.311-15.101 2.311zm11.557-20.957c4.007 0 7.14-.976 9.4-2.927 2.26-1.952 3.39-4.726 3.39-8.322V99.163c-1.952-.925-4.417-1.387-7.397-1.387-5.444 0-9.81 1.9-13.098 5.701-3.184 3.801-4.777 9.143-4.777 16.026 0 9.965 4.161 14.947 12.482 14.947zM787.963 147.24c.719.822 1.079 1.747 1.079 2.774 0 .924-.308 1.695-.925 2.311-.616.514-1.438.771-2.465.771h-23.885c-1.438 0-2.517-.103-3.236-.308-.616-.309-1.284-.874-2.003-1.695l-20.957-28.508v22.806c0 2.671-.616 4.623-1.849 5.856-1.233 1.232-3.339 1.849-6.318 1.849h-14.947c-2.979 0-5.085-.617-6.318-1.849-1.13-1.233-1.695-3.185-1.695-5.856v-89.22c0-2.672.616-4.624 1.849-5.856 1.233-1.336 3.288-2.004 6.164-2.004h14.947c2.979 0 5.085.668 6.318 2.004 1.233 1.232 1.849 3.184 1.849 5.855v51.622l20.341-26.504c.616-.822 1.284-1.387 2.003-1.695.719-.309 1.798-.463 3.236-.463h23.885c1.027 0 1.797.309 2.311.925.616.514.925 1.233.925 2.157 0 1.028-.36 1.952-1.079 2.774l-26.35 30.203 27.12 32.051zM837.998 155.407c-8.629 0-16.334-1.438-23.114-4.314-6.677-2.877-11.968-7.192-15.872-12.944-3.903-5.753-5.855-12.79-5.855-21.111 0-13.047 3.698-23.012 11.095-29.895 7.396-6.883 18.029-10.324 31.897-10.324 13.561 0 23.834 3.39 30.819 10.17 7.089 6.678 10.633 15.975 10.633 27.891 0 5.137-2.26 7.705-6.78 7.705h-48.386c0 4.417 1.643 7.808 4.931 10.17 3.39 2.363 8.475 3.544 15.255 3.544 4.212 0 7.705-.359 10.479-1.078 2.876-.822 5.753-2.003 8.629-3.544 1.233-.514 2.055-.771 2.465-.771.925 0 1.695.617 2.312 1.849l5.239 9.862c.514 1.028.771 1.798.771 2.312 0 .924-.617 1.798-1.85 2.619-4.211 2.774-8.988 4.777-14.33 6.01-5.342 1.233-11.455 1.849-18.338 1.849zm11.866-48.077c0-3.904-1.13-6.935-3.39-9.092-2.26-2.157-5.651-3.236-10.171-3.236s-7.961 1.13-10.324 3.39c-2.363 2.158-3.544 5.137-3.544 8.938h27.429zM930.417 155.407c-8.63 0-16.797-.873-24.501-2.619-7.705-1.85-13.92-4.418-18.646-7.705-1.746-1.13-2.619-2.312-2.619-3.544 0-.822.308-1.695.924-2.62l7.551-12.019c.822-1.233 1.643-1.849 2.465-1.849.514 0 1.387.359 2.62 1.078 3.801 2.158 8.115 3.904 12.944 5.239 4.828 1.336 9.605 2.004 14.331 2.004 4.828 0 8.372-.719 10.632-2.158 2.363-1.438 3.544-3.749 3.544-6.934 0-3.082-1.284-5.496-3.852-7.242-2.466-1.747-7.14-3.955-14.023-6.626-10.375-3.904-18.491-8.27-24.347-13.099-5.753-4.93-8.629-11.608-8.629-20.032 0-10.17 3.647-17.926 10.941-23.268C907.046 48.67 916.753 46 928.876 46c8.423 0 15.615.77 21.573 2.311 6.061 1.439 11.197 3.699 15.409 6.78 1.747 1.336 2.62 2.569 2.62 3.699 0 .719-.308 1.54-.925 2.465l-7.55 12.02c-.925 1.232-1.747 1.849-2.466 1.849-.513 0-1.387-.36-2.619-1.079-5.959-3.904-13.047-5.855-21.265-5.855-4.418 0-7.808.719-10.171 2.157-2.362 1.438-3.544 3.801-3.544 7.088 0 2.26.617 4.11 1.849 5.548 1.233 1.438 2.877 2.722 4.931 3.852 2.158 1.027 5.445 2.363 9.862 4.007l2.928 1.078c7.602 2.98 13.561 5.856 17.875 8.63 4.418 2.67 7.756 6.009 10.016 10.016 2.26 3.903 3.39 8.834 3.39 14.793 0 9.143-3.441 16.437-10.324 21.881-6.78 5.445-16.796 8.167-30.048 8.167zM1003.53 153.096c-1.54 0-2.72-.257-3.544-.771-.822-.513-1.439-1.541-1.85-3.082l-19.878-66.569c-.205-.616-.308-1.078-.308-1.386 0-1.438 1.027-2.158 3.082-2.158h20.338c1.34 0 2.31.257 2.93.77.62.412 1.03 1.13 1.23 2.158l8.32 34.98 10.48-28.2c.52-1.232 1.03-2.054 1.54-2.465.62-.514 1.65-.77 3.09-.77h9.7c1.44 0 2.42.256 2.93.77.62.41 1.18 1.233 1.7 2.465l10.32 28.2 8.48-34.98c.3-1.027.71-1.746 1.23-2.157.51-.514 1.44-.77 2.77-.77h20.5c2.05 0 3.08.719 3.08 2.157 0 .308-.1.77-.31 1.386l-20.03 66.569c-.41 1.541-1.03 2.569-1.85 3.082-.72.514-1.85.771-3.39.771h-15.1c-1.44 0-2.52-.257-3.24-.771-.72-.616-1.33-1.643-1.85-3.082l-10.17-27.891-10.17 27.891c-.41 1.439-1.03 2.466-1.85 3.082-.72.514-1.79.771-3.23.771h-14.95zM1128.73 155.407c-9.66 0-17.41-3.082-23.27-9.245-5.75-6.267-8.63-15.05-8.63-26.351 0-8.629 1.95-16.18 5.86-22.652 4-6.472 9.6-11.454 16.79-14.947 7.3-3.595 15.67-5.393 25.12-5.393 7.81 0 14.69.873 20.65 2.62 6.06 1.643 11.61 4.057 16.64 7.242v61.638c0 1.952-.36 3.236-1.08 3.852-.72.617-2.15.925-4.31.925h-15.72c-1.13 0-2-.154-2.62-.463-.62-.41-1.13-1.027-1.54-1.849l-2-4.622c-2.98 3.184-6.58 5.496-10.79 6.934-4.11 1.541-9.14 2.311-15.1 2.311zm11.56-20.957c4 0 7.14-.976 9.4-2.927 2.26-1.952 3.39-4.726 3.39-8.322V99.163c-1.96-.925-4.42-1.387-7.4-1.387-5.45 0-9.81 1.9-13.1 5.701-3.18 3.801-4.78 9.143-4.78 16.026 0 9.965 4.17 14.947 12.49 14.947zM1203.18 184.223c-2.98 0-5.08-.616-6.32-1.849-1.13-1.233-1.69-3.185-1.69-5.856V88.222c4.62-3.287 10.43-6.01 17.41-8.167 6.99-2.157 14.28-3.236 21.88-3.236 31.03 0 46.54 13.15 46.54 39.448 0 11.917-3.29 21.419-9.86 28.508-6.58 7.088-15.87 10.632-27.89 10.632-3.39 0-6.68-.411-9.87-1.233-3.08-.821-5.65-1.951-7.7-3.39v25.734c0 2.671-.62 4.623-1.85 5.856-1.23 1.233-3.34 1.849-6.32 1.849h-14.33zm33.44-49.619c4.42 0 7.71-1.643 9.86-4.931 2.26-3.39 3.39-7.91 3.39-13.56 0-6.677-1.33-11.352-4-14.023-2.57-2.773-6.58-4.16-12.02-4.16-3.5 0-6.27.462-8.32 1.387v24.501c0 3.493.97 6.164 2.92 8.013 1.96 1.849 4.68 2.773 8.17 2.773z" fill="#FFFFFF"></path>'

const MyCustomTokenIcon = `
<g transform="translate(-30.000000,180.000000) scale(0.100000,-0.100000)"
fill="#000000" stroke="none">
<path d="M1303 1643 c26 -2 68 -2 95 0 26 2 4 3 -48 3 -52 0 -74 -1 -47 -3z"/>
<path d="M1203 1633 c9 -2 25 -2 35 0 9 3 1 5 -18 5 -19 0 -27 -2 -17 -5z"/>
<path d="M1463 1633 c9 -2 25 -2 35 0 9 3 1 5 -18 5 -19 0 -27 -2 -17 -5z"/>
<path d="M1148 1623 c6 -2 18 -2 25 0 6 3 1 5 -13 5 -14 0 -19 -2 -12 -5z"/>
<path d="M1528 1623 c6 -2 18 -2 25 0 6 3 1 5 -13 5 -14 0 -19 -2 -12 -5z"/>
<path d="M1108 1613 c7 -3 16 -2 19 1 4 3 -2 6 -13 5 -11 0 -14 -3 -6 -6z"/>
<path d="M1578 1613 c7 -3 16 -2 19 1 4 3 -2 6 -13 5 -11 0 -14 -3 -6 -6z"/>
<path d="M1628 1603 c7 -3 16 -2 19 1 4 3 -2 6 -13 5 -11 0 -14 -3 -6 -6z"/>
<path d="M1233 1589 c-144 -17 -402 -92 -555 -162 -84 -39 -212 -114 -273
-161 -115 -88 -260 -244 -304 -327 l-24 -45 103 -304 c56 -168 108 -315 116
-327 8 -12 23 -27 35 -33 23 -13 601 -48 627 -39 22 9 59 44 97 94 44 58 141
170 193 223 42 44 48 47 97 47 52 0 54 -1 116 -65 35 -36 87 -92 114 -124 122
-143 145 -167 167 -175 9 -3 151 1 313 11 319 18 330 20 359 76 7 15 55 151
106 302 51 151 96 283 101 292 19 35 -66 153 -211 296 -178 175 -446 309 -770
388 -172 42 -267 49 -407 33z m57 -318 l0 -229 -55 -30 -55 -30 0 157 c0 87
-3 160 -6 163 -17 17 -289 -64 -412 -123 -104 -50 -105 -50 -126 -31 -21 20
-21 20 -86 -23 -36 -24 -85 -65 -110 -90 -43 -44 -45 -48 -45 -104 0 -70 -4
-69 -84 12 l-54 55 80 79 c126 127 226 193 424 280 161 72 391 137 502 142
l27 1 0 -229z m393 178 c293 -83 513 -204 686 -377 l73 -74 -63 -64 c-35 -35
-66 -64 -69 -64 -3 0 -5 27 -5 61 l0 61 -61 57 c-33 31 -81 69 -107 84 -46 27
-48 27 -76 11 -27 -16 -30 -16 -72 9 -80 47 -192 89 -324 122 -71 18 -133 31
-137 29 -5 -3 -8 -76 -8 -164 l0 -158 -55 30 -55 30 0 230 0 230 68 -7 c37 -4
129 -25 205 -46z m-28 -296 c-21 -20 -47 4 -31 29 9 16 12 16 28 1 15 -13 15
-17 3 -30z m-607 24 c8 -10 6 -16 -9 -25 -11 -7 -19 -8 -19 -2 0 5 -8 10 -17
10 -15 0 -14 2 3 15 24 18 29 18 42 2z m-198 -92 l40 14 -19 -37 c-17 -34 -18
-41 -5 -71 19 -45 19 -44 -24 -22 -34 17 -40 18 -66 4 -36 -19 -41 -12 -21 28
16 30 16 35 1 66 -21 45 -21 46 19 23 31 -18 38 -18 75 -5z m1065 -5 c-19 -37
-19 -53 1 -91 15 -30 15 -31 -8 -24 -13 4 -29 11 -37 15 -8 5 -27 0 -45 -11
-43 -27 -48 -24 -29 16 16 33 16 37 0 70 -23 47 -22 48 19 30 33 -13 39 -13
72 5 20 10 38 19 40 20 1 0 -4 -13 -13 -30z m-1270 -90 c3 -5 -1 -10 -10 -10
-9 0 -13 5 -10 10 3 6 8 10 10 10 2 0 7 -4 10 -10z m1399 -11 c-3 -5 -10 -7
-15 -3 -5 3 -7 10 -3 15 3 5 10 7 15 3 5 -3 7 -10 3 -15z m-1046 -52 c-10 -12
-15 -12 -26 0 -11 11 -11 17 -2 28 10 13 14 13 27 0 11 -12 12 -17 1 -28z
m698 -2 c-19 -19 -22 -19 -30 1 -4 9 -1 23 5 30 9 11 13 11 26 -1 13 -13 13
-17 -1 -30z m-1145 -44 c-7 -13 -8 -22 -1 -26 19 -12 10 -22 -15 -17 -14 2
-32 -1 -40 -8 -17 -14 -20 -3 -6 19 6 9 6 22 -1 34 -9 17 -7 19 14 14 13 -3
30 -2 38 3 20 12 24 6 11 -19z m1619 16 c20 5 21 4 13 -12 -6 -10 -9 -25 -6
-34 3 -13 -4 -16 -36 -16 -32 -1 -38 2 -29 12 5 7 7 24 4 38 -6 23 -5 25 12
16 10 -5 29 -7 42 -4z m-1446 -18 c-3 -5 -10 -7 -15 -3 -5 3 -7 10 -3 15 3 5
10 7 15 3 5 -3 7 -10 3 -15z m1236 1 c0 -5 -2 -10 -4 -10 -3 0 -8 5 -11 10 -3
6 -1 10 4 10 6 0 11 -4 11 -10z m-682 -102 c-1 -90 -10 -114 -56 -156 -28 -26
-41 -32 -60 -27 -20 5 -33 -2 -68 -36 l-42 -41 -59 19 c-32 11 -58 24 -58 30
0 6 26 39 58 74 32 35 67 74 78 85 10 12 19 31 19 43 0 20 -5 21 -85 21 -67 0
-85 3 -85 14 0 8 -3 21 -6 30 -5 14 14 16 180 16 l186 0 -2 -72z m508 56 c-3
-9 -6 -22 -6 -30 0 -11 -18 -14 -85 -14 -80 0 -85 -1 -85 -21 0 -23 5 -29 100
-132 38 -40 60 -71 54 -76 -5 -5 -33 -16 -62 -26 l-54 -17 -37 36 c-31 30 -43
36 -64 31 -22 -6 -33 0 -72 39 -25 25 -45 52 -45 59 -1 6 -3 47 -7 90 l-5 77
187 0 c167 0 186 -2 181 -16z m-1091 -87 c-5 -24 -2 -37 9 -46 24 -20 19 -28
-14 -23 -21 3 -38 -2 -52 -14 -20 -19 -20 -19 -14 13 6 25 3 36 -13 50 -30 25
-26 34 10 21 27 -9 34 -8 52 11 28 28 29 27 22 -12z m1310 3 c3 -5 20 -7 38
-3 32 6 32 6 13 -15 -14 -16 -17 -30 -12 -53 l6 -31 -26 17 c-14 9 -37 15 -50
12 -27 -5 -29 0 -10 26 10 13 12 27 6 48 -8 26 -7 28 10 19 10 -6 22 -14 25
-20z m-1154 -102 c-12 -13 -17 -15 -20 -6 -2 7 -9 16 -15 20 -8 5 -7 8 2 8 6
0 12 8 12 17 0 15 2 14 18 -2 16 -18 17 -21 3 -37z m990 3 c-12 -12 -17 -13
-19 -4 -2 7 -8 13 -13 13 -5 0 -4 6 3 14 9 9 17 10 29 3 15 -9 15 -11 0 -26z"/>
<path d="M2657 945 c4 -11 7 -39 7 -62 0 -24 1 -43 2 -43 1 0 6 13 12 28 7 22
5 35 -10 63 -10 18 -16 25 -11 14z"/>
<path d="M24 906 c-3 -14 -2 -31 3 -40 6 -11 8 -3 8 24 0 46 -2 50 -11 16z"/>
<path d="M60 774 c0 -18 33 -109 37 -99 2 6 -6 33 -17 60 -10 28 -19 45 -20
39z"/>
<path d="M2611 704 c-13 -36 -21 -67 -19 -69 2 -3 15 25 27 61 13 35 22 67 19
69 -2 2 -14 -25 -27 -61z"/>
<path d="M121 590 c0 -8 11 -42 24 -75 13 -33 24 -53 24 -45 0 8 -11 42 -24
75 -13 33 -24 53 -24 45z"/>
<path d="M2552 528 c-30 -85 -27 -99 4 -19 13 36 23 69 21 74 -1 5 -13 -20
-25 -55z"/>
<path d="M2500 373 c-43 -133 -52 -152 -84 -173 -17 -11 -25 -20 -19 -20 33 0
71 57 102 154 18 54 30 100 27 103 -2 2 -14 -26 -26 -64z"/>
<path d="M180 412 c0 -15 42 -133 46 -129 5 5 -35 137 -41 137 -3 0 -5 -4 -5
-8z"/>
<path d="M230 257 c0 -20 54 -77 73 -77 6 0 1 7 -12 16 -12 9 -31 30 -42 48
-14 23 -19 26 -19 13z"/>
<path d="M328 173 c7 -3 16 -2 19 1 4 3 -2 6 -13 5 -11 0 -14 -3 -6 -6z"/>
<path d="M728 153 c6 -2 18 -2 25 0 6 3 1 5 -13 5 -14 0 -19 -2 -12 -5z"/>
<path d="M1958 153 c7 -3 16 -2 19 1 4 3 -2 6 -13 5 -11 0 -14 -3 -6 -6z"/>
<path d="M898 143 c6 -2 18 -2 25 0 6 3 1 5 -13 5 -14 0 -19 -2 -12 -5z"/>
<path d="M1788 143 c6 -2 18 -2 25 0 6 3 1 5 -13 5 -14 0 -19 -2 -12 -5z"/>
</g>
 ` 
const App = ({ Component, pageProps }: AppPropsWithLayout) => {
  // Use the layout defined at the page level, if available
  const Layout = Component.Layout || Fragment
  const [logoState, setLogoState] = useState(true)
  const handleScroll = () => {
    console.log('window.scrollY========',window.scrollY)
    if(window.screenY>65) {
      console.log('window.scrollY>65',window.scrollY)
      setLogoState(false)
    } else {
      setLogoState(true)
    }
  }
  
  const query = document.querySelectorAll('svg')
  let queryCount:number = 0;
  const svgElements = query
 let queryTimer = setInterval(() => {
  if(query) {
    for(let svgIndex = 0; svgIndex<query.length; svgIndex++) {
      if(query[svgIndex].getAttribute('viewBox')==='0 0 1281 199') {
        const letter = query[svgIndex].firstChild;
        query[svgIndex].innerHTML = '';
        console.log('letter', letter);
        query[svgIndex].innerHTML = letterElement + MyCustomTokenIcon;        
        queryCount++;

      }
      if(query[svgIndex].getAttribute('viewBox')==='0 0 96 96') {
        query[svgIndex].setAttribute('viewBox','0 0 250 200');
        query[svgIndex].innerHTML = '';        
        query[svgIndex].innerHTML = MyCustomTokenIcon;
        queryCount ++;
      }      
      if(queryCount===3) {
        clearInterval(queryTimer)
      }
    }
  }
 },5)
  
  document.addEventListener('scroll',handleScroll)
 // NOTE: Main layout component
  // This is the main layout component that wraps the entire page

  return (
    <ProductionErrorBoundary>
      <Menu>        
        <Layout>
          <Component {...pageProps} />          
        </Layout>
        {/* <div style={{backgroundColor:'#27262c',width: '2rem',height:'3rem',position:'absolute',left:'5.5%',display: 'flex' , marginTop:'45px', alignItems: 'center'}}>
        <img src="https://bafybeia5iird2icxv6cszha72jrd2qktkuvpzyseaw3cc3mwbpjvvoixqi.ipfs.infura-ipfs.io/" style={{width:'2rem'}} alt='logo2'/>
        </div> */}
        {/* <div style={{backgroundColor:'#27262c',width: '2.3rem', height: '2rem',position:'absolute',right:'20%',bottom:'39px', display: 'flex', alignItems: 'center',borderRadius: '100%', zIndex:'555'}}>
        <img src="https://bafybeia5iird2icxv6cszha72jrd2qktkuvpzyseaw3cc3mwbpjvvoixqi.ipfs.infura-ipfs.io/" style={{width:'2rem'}} alt='logo3'/>
        </div> */}
      </Menu>
      <ToastListener />
      {
        // Simple copyright notice
        <div className="text-center text-gray-500 text-xs">
          <p>
            <a href="https://galaxygoggle.io" target="_blank" rel="noopener noreferrer">
              Galaxy Goggle DAO
            </a>
            &nbsp;&copy;&nbsp;
            {new Date().getFullYear()}
          </p>
        </div>
      }
    </ProductionErrorBoundary>
  )
}

export default MyApp
